services:
  warehouse-service:
    container_name: warehouse-service
    build: ./warehouse-service
    environment:
      - ENV=dev
    networks:
      - app-network
    depends_on:
      - postgres
      - kafka
      - client-service
    expose:
      - "80"
    restart: always

  user-service:
    container_name: user-service
    build: ./user-service
    environment:
      - ENV=dev
    networks:
      - app-network
    depends_on:
      - postgres
      - client-service
    expose:
      - "80"
    restart: always

  client-service:
    container_name: client-service
    build: ./client-service
    environment:
      - ENV=dev
    networks:
      - app-network
    depends_on:
      - postgres
    expose:
      - "80"
    restart: always

  auth-service:
    container_name: auth-service
    build: ./auth-service
    environment:
      - ENV=dev
    networks:
      - app-network
    depends_on:
      - redis
    expose:
      - "80"

  cart-service:
    container_name: cart-service
    build: ./cart-service
    environment:
      - ENV=dev
    networks:
      - app-network
    depends_on:
      - postgres
      - user-service
      - warehouse-service
    expose:
      - "80"

  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    ports:
      - "8080:80"
    environment:
      - ENV=dev
    networks:
      - app-network
    expose:
      - "80"

  redis:
    hostname: redis
    image: redis:6.0-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  postgres:
    hostname: postgres
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=logistics
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  kafka:
    hostname: kafka
    image: confluentinc/cp-server:7.7.1
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29091, PLAINTEXT_HOST://kafka:9091
    ports:
      - "9091:9091"
    networks:
      - app-network
    depends_on:
      - zookeeper
    restart: always

  zookeeper:
    image: confluentinc/cp-zookeeper:7.7.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 1
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - app-network

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
